#+TITLE: Configuración de Doom Emacs
#+AUTHOR: Pascual M.G.

* Información Personal
#+BEGIN_SRC emacs-lisp
(setq user-full-name "Pascual M.G."
      user-mail-address "pascual.munoz.galian@gmail.com")
#+END_SRC

* Configuración de Ventana
#+BEGIN_SRC emacs-lisp
(push '(fullscreen . maximized) initial-frame-alist)
#+END_SRC

* Configuración de Fuentes
#+BEGIN_SRC emacs-lisp
;; Mensaje para verificar la configuración actual de la fuente
(message "Valor actual de doom-font: %s" doom-font)
#+END_SRC

* Números de Línea
#+BEGIN_SRC emacs-lisp
(setq display-line-numbers-type t)
#+END_SRC

* Configuración de Org-mode
#+BEGIN_SRC emacs-lisp
(setq org-directory "~/Dropbox/org/")
#+END_SRC

* Configuración de PHP
#+BEGIN_SRC emacs-lisp
(after! php
  (setq php-mode-coding-style 'psr2) ; Estilo de codificación PSR-2

  ;; Ruta al ejecutable de PHP proporcionado por Nix
  (setq php-mode-program "/nix/store/07vcszwmkfxhdjnsi5psxzr47zg9xkjj-php-with-extensions-8.2.13/bin/php")
  )

(setq dap-php-debug-program '("/nix/store/07vcszwmkfxhdjnsi5psxzr47zg9xkjj-php-with-extensions-8.2.13/bin/php" "-dxdebug.remote_enable=1" "-dxdebug.remote_mode=req" "-dxdebug.remote_port=9000" "-dxdebug.remote_host=127.0.0.1" "-dxdebug.remote_connect_back=0"))
#+END_SRC

* Configuración de Telega
#+BEGIN_SRC emacs-lisp
(setq telega-server-libs-prefix "/usr/local/lib/tdlib")
#+END_SRC

* Configuración de Temas
#+BEGIN_SRC emacs-lisp
(use-package! doom-themes
  :config
  (setq doom-themes-org-font "-apple-Pacifico-Regular-normal-normal-*-14-*-*-*-m-0-iso10646-1"))
#+END_SRC

* Configuración de Exportación Org
#+BEGIN_SRC emacs-lisp
(setq org-export-allow-bind-keywords t)
#+END_SRC

* Configuración de Transparencia
#+BEGIN_SRC emacs-lisp
;; Habilitar transparencia
(set-frame-parameter (selected-frame) 'alpha '(85 . 85))
(add-to-list 'default-frame-alist '(alpha . (85 . 85)))

;; Función para alternar la transparencia
(defun toggle-transparency ()
  (interactive)
  (let ((alpha (frame-parameter nil 'alpha)))
    (set-frame-parameter
     nil 'alpha
     (if (eql (cond ((numberp alpha) alpha)
                    ((numberp (cdr alpha)) (cdr alpha))
                    ;; También manejar casos no numéricos
                    ((listp alpha) (cadr alpha)))
              100)
         '(85 . 85) '(100 . 100)))))

;; Atajo de teclado para alternar la transparencia
(global-set-key (kbd "C-c t") 'toggle-transparency)
#+END_SRC

* Configuración de Haskell
#+BEGIN_SRC emacs-lisp
(after! haskell-mode
  (setq haskell-interactive-popup-errors nil))
#+END_SRC

* Funciones Personalizadas
#+BEGIN_SRC emacs-lisp
(defun copy-whole-buffer-to-clipboard ()
  "Copy entire buffer to clipboard"
  (interactive)
  (clipboard-kill-ring-save (point-min) (point-max))
  (message "Buffer copied to clipboard"))

(map! :leader
      :desc "Copy whole buffer to clipboard"
      "y b" #'copy-whole-buffer-to-clipboard)
#+END_SRC
